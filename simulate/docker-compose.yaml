networks:
  front-tier:
    ipam:
      driver: default
      config:
        - subnet: "172.16.239.0/16"

services:
  node1:
    image: x1
    build:
        context: ..
        dockerfile: ./simulate/Dockerfile
    command: "--fakenet 1/5 --http --http.port 8545 --http.addr 0.0.0.0 --http.vhosts '*' --http.corsdomain '*' --ws --ws.addr 0.0.0.0 --ws.port 8546 --ws.origins '*' --verbosity 3 --port 6050  --maxpeers 5 --nat 'extip:172.16.239.1' --nodekeyhex a990fd697515b460482856549dbab85279e31276f9e9027f1c2d85bfb4f5bcb1"
    ports:
      - "6050:6050"
      - "6050:6050/udp"
      - "8545:8545"
      - "8546:8546"
    networks:
      front-tier:
        ipv4_address: 172.16.239.1
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://172.16.239.1:8545"]
      interval: 1s
      timeout: 1s
      retries: 30


  node2:
    image: x1
    build:
        context: ..
        dockerfile: ./simulate/Dockerfile
    command: "--fakenet 2/5 --http --http.port 8545 --http.addr 0.0.0.0 --http.vhosts '*' --http.corsdomain '*' --verbosity 3 --port 6051 --bootnodes 'enode://f1f6ea0bb37434adbee2df628a95b0a46b6b6a13d21d0cfc3714cd5558f904beeaddfb29d090b1c49a8fce52ae1894273b454f3c2bdf113ac3f4f645225043ae@node1:6050'"
    ports:
      - "6051:6051"
      - "6051:6051/udp"
    networks:
      front-tier:
        ipv4_address: 172.16.239.2
    depends_on:
      node1:
        condition: service_healthy
    restart: always
    healthcheck:
        test: ["CMD", "uptime"]
        interval: 3s
        timeout: 3s
        retries: 60


  node3:
    image: x1
    build:
        context: ..
        dockerfile: ./simulate/Dockerfile
    command: "--fakenet 3/5 --http --http.port 8545 --http.addr 0.0.0.0 --http.vhosts '*' --http.corsdomain '*' --verbosity 3 --port 6052 --bootnodes 'enode://f1f6ea0bb37434adbee2df628a95b0a46b6b6a13d21d0cfc3714cd5558f904beeaddfb29d090b1c49a8fce52ae1894273b454f3c2bdf113ac3f4f645225043ae@node1:6050'"
    ports:
      - "6052:6052"
      - "6052:6052/udp"
    networks:
      front-tier:
        ipv4_address: 172.16.239.3
    depends_on:
      node2:
        condition: service_healthy
    restart: always
    healthcheck:
        test: ["CMD", "uptime"]
        interval: 3s
        timeout: 3s
        retries: 60


  node4:
    image: x1
    build:
        context: ..
        dockerfile: ./simulate/Dockerfile
    command: "--fakenet 4/5 --http --http.port 8545 --http.addr 0.0.0.0 --http.vhosts '*' --http.corsdomain '*' --verbosity 3 --port 6053 --bootnodes 'enode://f1f6ea0bb37434adbee2df628a95b0a46b6b6a13d21d0cfc3714cd5558f904beeaddfb29d090b1c49a8fce52ae1894273b454f3c2bdf113ac3f4f645225043ae@node1:6050'"
    ports:
      - "6053:6053"
      - "6053:6053/udp"
    networks:
      front-tier:
        ipv4_address: 172.16.239.4
    depends_on:
      node3:
        condition: service_healthy
    restart: always
    healthcheck:
        test: ["CMD", "uptime"]
        interval: 3s
        timeout: 3s
        retries: 60


  node5:
    image: x1
    build:
        context: ..
        dockerfile: ./simulate/Dockerfile
    command: "--fakenet 5/5 --http --http.port 8545 --http.addr 0.0.0.0 --http.vhosts '*' --http.corsdomain '*' --verbosity 3 --port 6054 --bootnodes 'enode://f1f6ea0bb37434adbee2df628a95b0a46b6b6a13d21d0cfc3714cd5558f904beeaddfb29d090b1c49a8fce52ae1894273b454f3c2bdf113ac3f4f645225043ae@node1:6050'"
    ports:
      - "6054:6054"
      - "6054:6054/udp"
    networks:
      front-tier:
        ipv4_address: 172.16.239.5
    depends_on:
      node4:
        condition: service_healthy
    restart: always
    healthcheck:
        test: ["CMD", "uptime"]
        interval: 3s
        timeout: 3s
        retries: 60

